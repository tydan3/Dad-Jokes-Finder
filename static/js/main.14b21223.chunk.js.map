{"version":3,"sources":["SearchForm.js","App.js","index.js"],"names":["SearchForm","props","onSubmit","event","preventDefault","onFormSubmit","className","type","placeholder","onChange","onSearchValueChange","target","value","disabled","isSearching","onClick","onSingleSearchClick","App","state","searchTerm","jokes","isFetchingJokes","onSearchChange","bind","searchJokes","randomJoke","this","setState","fetch","method","headers","Accept","then","response","json","id","joke","limit","results","console","log","map","item","src","alt","renderJokes","React","Component","rootElement","document","getElementById","ReactDOM","render","version"],"mappings":"wQA4BeA,EAzBI,SAACC,GAMlB,OACE,uBAAMC,SANS,SAACC,GAChBA,EAAMC,iBACNH,EAAMI,gBAIoBC,UAAU,cAApC,UACE,uBACEC,KAAK,OACLC,YAAY,uBACZC,SAAU,SAACN,GAAD,OAAWF,EAAMS,oBAAoBP,EAAMQ,OAAOC,UAE9D,gCACE,wBAAQC,SAAUZ,EAAMa,YAAxB,oBACA,wBACEC,QAASd,EAAMe,oBACfH,SAAUZ,EAAMa,YAFlB,qCCbaG,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,WAAY,GACZC,MAAO,GACPC,iBAAiB,GAEnB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBATN,E,8CAYd,WAAc,IAAD,OACXG,KAAKC,SAAS,CAAEN,iBAAiB,IACjCO,MAAM,8BAA+B,CACnCC,OAAQ,MACRC,QAAS,CACPC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACL,IAAMd,EAAQ,CAAC,CAAEe,GAAID,EAAKC,GAAIC,KAAMF,EAAKE,OACzC,EAAKT,SAAS,CACZP,QACAC,iBAAiB,S,yBAKzB,WAAyB,IAAD,OAAZgB,EAAY,uDAAJ,GAClBX,KAAKC,SAAS,CAAEN,iBAAiB,IACjCO,MAAM,0CAAD,OACuCF,KAAKR,MAAMC,WADlD,kBACsEkB,GACzE,CACER,OAAQ,MACRC,QAAS,CACPC,OAAQ,sBAIXC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACL,IAAMd,EAAQc,EAAKI,QACnBC,QAAQC,IAAIN,EAAKI,SACjB,EAAKX,SAAS,CACZP,QACAC,iBAAiB,S,4BAKzB,SAAeT,GACbc,KAAKC,SAAS,CAAER,WAAYP,M,yBAG9B,WACE,OACE,oBAAIN,UAAU,aAAd,SACGoB,KAAKR,MAAME,MAAMqB,KAAI,SAACC,GAAD,OACpB,mCAAoBA,EAAKN,OAAhBM,EAAKP,W,oBAMtB,WAAU,IAAD,OACP,OACE,sBAAK7B,UAAU,MAAf,UACE,qBAAKA,UAAU,OAAOqC,IAAI,kBAAkBC,IAAI,SAChD,cAAC,EAAD,CACEvC,aAAcqB,KAAKF,YACnBd,oBAAqBgB,KAAKJ,eAC1BR,YAAaY,KAAKR,MAAMG,gBACxBL,oBAAqB,kBAAM,EAAKS,gBAGjCC,KAAKR,MAAMG,gBACR,sBACAK,KAAKmB,qB,GAhFgBC,IAAMC,WAsFjCC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC,EAAD,CAAKC,QAAQ,QAAUL,GCvFvC,IAAMA,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.14b21223.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SearchForm.css\";\r\n\r\nconst SearchForm = (props) => {\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.onFormSubmit();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"search-form\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter search term...\"\r\n        onChange={(event) => props.onSearchValueChange(event.target.value)}\r\n      />\r\n      <div>\r\n        <button disabled={props.isSearching}>Search</button>\r\n        <button\r\n          onClick={props.onSingleSearchClick}\r\n          disabled={props.isSearching}\r\n        >\r\n          Find Random Joke\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default SearchForm;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SearchForm from \"./SearchForm\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      searchTerm: \"\",\n      jokes: [],\n      isFetchingJokes: false,\n    };\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.searchJokes = this.searchJokes.bind(this);\n    this.randomJoke = this.randomJoke.bind(this);\n  }\n\n  randomJoke() {\n    this.setState({ isFetchingJokes: true });\n    fetch(\"https://icanhazdadjoke.com/\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        const jokes = [{ id: json.id, joke: json.joke }];\n        this.setState({\n          jokes,\n          isFetchingJokes: false,\n        });\n      });\n  }\n\n  searchJokes(limit = 20) {\n    this.setState({ isFetchingJokes: true });\n    fetch(\n      `https://icanhazdadjoke.com/search?term=${this.state.searchTerm}&limit=${limit}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((json) => {\n        const jokes = json.results;\n        console.log(json.results);\n        this.setState({\n          jokes,\n          isFetchingJokes: false,\n        });\n      });\n  }\n\n  onSearchChange(value) {\n    this.setState({ searchTerm: value });\n  }\n\n  renderJokes() {\n    return (\n      <ul className=\"jokes-list\">\n        {this.state.jokes.map((item) => (\n          <li key={item.id}> {item.joke}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img className=\"logo\" src=\"assets/logo.png\" alt=\"logo\" />\n        <SearchForm\n          onFormSubmit={this.searchJokes}\n          onSearchValueChange={this.onSearchChange}\n          isSearching={this.state.isFetchingJokes}\n          onSingleSearchClick={() => this.randomJoke()}\n        />\n\n        {this.state.isFetchingJokes\n          ? \"searching for jokes\"\n          : this.renderJokes()}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App version=\"1.0\" />, rootElement);\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}